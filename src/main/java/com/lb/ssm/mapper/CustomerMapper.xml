<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lb.ssm.mapper.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.lb.ssm.vo.Customer" >
    <id column="customerId" property="customerid" jdbcType="INTEGER" />
    <result column="customerName" property="customername" jdbcType="VARCHAR" />
    <result column="customerPhone" property="customerphone" jdbcType="VARCHAR" />
    <result column="customerPhone2" property="customerphone2" jdbcType="VARCHAR" />
    <result column="customerAddr" property="customeraddr" jdbcType="VARCHAR" />
    <result column="customerCard" property="customercard" jdbcType="VARCHAR" />
    <result column="customerCardname" property="customercardname" jdbcType="VARCHAR" />
    <result column="cellId" property="cellid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    customerId, customerName, customerPhone, customerPhone2, customerAddr, customerCard, 
    customerCardname, cellId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lb.ssm.vo.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where customerId = #{customerid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where customerId = #{customerid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lb.ssm.vo.CustomerExample" >
    delete from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lb.ssm.vo.Customer" >
    insert into customer (customerId, customerName, customerPhone, 
      customerPhone2, customerAddr, customerCard, 
      customerCardname, cellId)
    values (#{customerid,jdbcType=INTEGER}, #{customername,jdbcType=VARCHAR}, #{customerphone,jdbcType=VARCHAR}, 
      #{customerphone2,jdbcType=VARCHAR}, #{customeraddr,jdbcType=VARCHAR}, #{customercard,jdbcType=VARCHAR}, 
      #{customercardname,jdbcType=VARCHAR}, #{cellid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lb.ssm.vo.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        customerId,
      </if>
      <if test="customername != null" >
        customerName,
      </if>
      <if test="customerphone != null" >
        customerPhone,
      </if>
      <if test="customerphone2 != null" >
        customerPhone2,
      </if>
      <if test="customeraddr != null" >
        customerAddr,
      </if>
      <if test="customercard != null" >
        customerCard,
      </if>
      <if test="customercardname != null" >
        customerCardname,
      </if>
      <if test="cellid != null" >
        cellId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="customername != null" >
        #{customername,jdbcType=VARCHAR},
      </if>
      <if test="customerphone != null" >
        #{customerphone,jdbcType=VARCHAR},
      </if>
      <if test="customerphone2 != null" >
        #{customerphone2,jdbcType=VARCHAR},
      </if>
      <if test="customeraddr != null" >
        #{customeraddr,jdbcType=VARCHAR},
      </if>
      <if test="customercard != null" >
        #{customercard,jdbcType=VARCHAR},
      </if>
      <if test="customercardname != null" >
        #{customercardname,jdbcType=VARCHAR},
      </if>
      <if test="cellid != null" >
        #{cellid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lb.ssm.vo.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer
    <set >
      <if test="record.customerid != null" >
        customerId = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.customername != null" >
        customerName = #{record.customername,jdbcType=VARCHAR},
      </if>
      <if test="record.customerphone != null" >
        customerPhone = #{record.customerphone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerphone2 != null" >
        customerPhone2 = #{record.customerphone2,jdbcType=VARCHAR},
      </if>
      <if test="record.customeraddr != null" >
        customerAddr = #{record.customeraddr,jdbcType=VARCHAR},
      </if>
      <if test="record.customercard != null" >
        customerCard = #{record.customercard,jdbcType=VARCHAR},
      </if>
      <if test="record.customercardname != null" >
        customerCardname = #{record.customercardname,jdbcType=VARCHAR},
      </if>
      <if test="record.cellid != null" >
        cellId = #{record.cellid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer
    set customerId = #{record.customerid,jdbcType=INTEGER},
      customerName = #{record.customername,jdbcType=VARCHAR},
      customerPhone = #{record.customerphone,jdbcType=VARCHAR},
      customerPhone2 = #{record.customerphone2,jdbcType=VARCHAR},
      customerAddr = #{record.customeraddr,jdbcType=VARCHAR},
      customerCard = #{record.customercard,jdbcType=VARCHAR},
      customerCardname = #{record.customercardname,jdbcType=VARCHAR},
      cellId = #{record.cellid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lb.ssm.vo.Customer" >
    update customer
    <set >
      <if test="customername != null" >
        customerName = #{customername,jdbcType=VARCHAR},
      </if>
      <if test="customerphone != null" >
        customerPhone = #{customerphone,jdbcType=VARCHAR},
      </if>
      <if test="customerphone2 != null" >
        customerPhone2 = #{customerphone2,jdbcType=VARCHAR},
      </if>
      <if test="customeraddr != null" >
        customerAddr = #{customeraddr,jdbcType=VARCHAR},
      </if>
      <if test="customercard != null" >
        customerCard = #{customercard,jdbcType=VARCHAR},
      </if>
      <if test="customercardname != null" >
        customerCardname = #{customercardname,jdbcType=VARCHAR},
      </if>
      <if test="cellid != null" >
        cellId = #{cellid,jdbcType=INTEGER},
      </if>
    </set>
    where customerId = #{customerid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lb.ssm.vo.Customer" >
    update customer
    set customerName = #{customername,jdbcType=VARCHAR},
      customerPhone = #{customerphone,jdbcType=VARCHAR},
      customerPhone2 = #{customerphone2,jdbcType=VARCHAR},
      customerAddr = #{customeraddr,jdbcType=VARCHAR},
      customerCard = #{customercard,jdbcType=VARCHAR},
      customerCardname = #{customercardname,jdbcType=VARCHAR},
      cellId = #{cellid,jdbcType=INTEGER}
    where customerId = #{customerid,jdbcType=INTEGER}
  </update>
</mapper>